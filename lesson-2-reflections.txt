What happens when you initialize a repository? Why do you need to do it?

	There will not commit, only a .git directory will appear at that location.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The working directory only contains the files but it is queryable. The staging 
	area can contain files before they will be committed.

How can you use the staging area to make sure you have one commit per logical
change?
	
	We add only to the staging area those files that are connected to that logical
	chnage.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When we want to try out new solutions but we are not sure wether we keep and release
	that version.

How do the diagrams help you visualize the branch structure?

	We use diagrams to visualize relationships among branches and we can see for
	instance the inheritance and the reachability.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The merged version contains all the changes from the two parents branches.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	
	When there is no conflict then it is more easier to merge automatically.